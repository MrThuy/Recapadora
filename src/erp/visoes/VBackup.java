package erp.visoes;

import erp.controles.CConfiguracoes;
import erp.controles.CFrame;
import erp.util.ERPComandoExterno;
import erp.util.ERPData;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * @author Arthur
 */
public class VBackup extends javax.swing.JDialog {

    public VBackup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        CFrame.configuraAtalhoBotao(btnSai, KeyEvent.VK_ESCAPE, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        btnSalva = new javax.swing.JButton();
        btnSai = new javax.swing.JButton();
        btnCopia = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setApproveButtonToolTipText("");
        jFileChooser1.setCurrentDirectory(null);
        jFileChooser1.setName("jFileChooser1");

        setTitle("Configurações");
        setResizable(false);

        btnSalva.setText("Salvar Backup Padrão");
        btnSalva.setName("btnSalva"); // NOI18N
        btnSalva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvaActionPerformed(evt);
            }
        });

        btnSai.setText("Sair (Esc)");
        btnSai.setName("btnSai");
        btnSai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaiActionPerformed(evt);
            }
        });

        btnCopia.setText("Salvar uma Cópia Backup");
        btnCopia.setName("btnCopia");
        btnCopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiaActionPerformed(evt);
            }
        });

        jProgressBar1.setName("jProgressBar1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSai)
                        .addGap(18, 18, 18)
                        .addComponent(btnCopia)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalva)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSai)
                    .addComponent(btnCopia)
                    .addComponent(btnSalva))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvaActionPerformed
        btnSalva.setEnabled(false);
        btnCopia.setEnabled(false);
        jProgressBar1.setIndeterminate(true);
        Thread thread = new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    ERPComandoExterno.executaCmd("java -jar \"" + (new File(".")).getCanonicalPath() + "\\Backup.jar\"");
                } catch (IOException ex) {
                }
                jProgressBar1.setIndeterminate(false);
                btnSalva.setEnabled(true);
                btnCopia.setEnabled(true);
            }
        });
        thread.start();
    }//GEN-LAST:event_btnSalvaActionPerformed

    private void btnSaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaiActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSaiActionPerformed

    private void btnCopiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiaActionPerformed

        int returnVal = jFileChooser1.showDialog(this, null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File arquivo = new File(jFileChooser1.getSelectedFile().toString() + ".7z");
            if (arquivo.exists()) {
                if (JOptionPane.showConfirmDialog(rootPane, "O arquivo já existe deseja sobreescrever?", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    arquivo.delete();
                } else {
                    return;
                }
            }

            btnCopia.setEnabled(false);
            btnSalva.setEnabled(false);
            jProgressBar1.setIndeterminate(true);
            Thread thread = new Thread(new Runnable() {

                @Override
                public void run() {
                    try {
                        String raiz = (new File(".")).getCanonicalPath();
                        ERPComandoExterno.executaCmd("java -jar \"" + raiz + "\\Backup.jar\" e \"" + raiz + "\"");
                        ERPComandoExterno.executaCmd("7z a \"" + jFileChooser1.getSelectedFile().toString() + ".7z\" e \"" + raiz + "\\*.*\" -R");
                        File arquivo = new File(raiz + "\\" + CConfiguracoes.carregaBase_Banco() + "_" + ERPData.getDiaSemanaDescritivo(new Date(System.currentTimeMillis())) + ".7z");
                        if (arquivo.exists()) {
                            arquivo.delete();
                        }
                    } catch (IOException ex) {
                    }
                    jProgressBar1.setIndeterminate(false);
                    btnSalva.setEnabled(true);
                    btnCopia.setEnabled(true);
                }
            });
            thread.start();
        }
    }//GEN-LAST:event_btnCopiaActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopia;
    private javax.swing.JButton btnSai;
    private javax.swing.JButton btnSalva;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
